// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: box/conversation.proto

package eboxpb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Conversation_Type int32

const (
	Conversation_TypeStandard Conversation_Type = 0
	Conversation_TypeEtsme    Conversation_Type = 1
	Conversation_TypeImage    Conversation_Type = 2
	// 归档的群
	Conversation_TypeArchived Conversation_Type = 3
)

// Enum value maps for Conversation_Type.
var (
	Conversation_Type_name = map[int32]string{
		0: "TypeStandard",
		1: "TypeEtsme",
		2: "TypeImage",
		3: "TypeArchived",
	}
	Conversation_Type_value = map[string]int32{
		"TypeStandard": 0,
		"TypeEtsme":    1,
		"TypeImage":    2,
		"TypeArchived": 3,
	}
)

func (x Conversation_Type) Enum() *Conversation_Type {
	p := new(Conversation_Type)
	*p = x
	return p
}

func (x Conversation_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Conversation_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_box_conversation_proto_enumTypes[0].Descriptor()
}

func (Conversation_Type) Type() protoreflect.EnumType {
	return &file_box_conversation_proto_enumTypes[0]
}

func (x Conversation_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Conversation_Type.Descriptor instead.
func (Conversation_Type) EnumDescriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{0, 0}
}

type ListConversationRequest_Type int32

const (
	// 所有群组
	ListConversationRequest_All ListConversationRequest_Type = 0
	// 我加入的
	ListConversationRequest_Joined ListConversationRequest_Type = 1
	// 我创建的
	ListConversationRequest_Created ListConversationRequest_Type = 2
)

// Enum value maps for ListConversationRequest_Type.
var (
	ListConversationRequest_Type_name = map[int32]string{
		0: "All",
		1: "Joined",
		2: "Created",
	}
	ListConversationRequest_Type_value = map[string]int32{
		"All":     0,
		"Joined":  1,
		"Created": 2,
	}
)

func (x ListConversationRequest_Type) Enum() *ListConversationRequest_Type {
	p := new(ListConversationRequest_Type)
	*p = x
	return p
}

func (x ListConversationRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListConversationRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_box_conversation_proto_enumTypes[1].Descriptor()
}

func (ListConversationRequest_Type) Type() protoreflect.EnumType {
	return &file_box_conversation_proto_enumTypes[1]
}

func (x ListConversationRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListConversationRequest_Type.Descriptor instead.
func (ListConversationRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{4, 0}
}

type GetConversationInviteCodeRequest_Type int32

const (
	GetConversationInviteCodeRequest_Public  GetConversationInviteCodeRequest_Type = 0
	GetConversationInviteCodeRequest_Private GetConversationInviteCodeRequest_Type = 1
)

// Enum value maps for GetConversationInviteCodeRequest_Type.
var (
	GetConversationInviteCodeRequest_Type_name = map[int32]string{
		0: "Public",
		1: "Private",
	}
	GetConversationInviteCodeRequest_Type_value = map[string]int32{
		"Public":  0,
		"Private": 1,
	}
)

func (x GetConversationInviteCodeRequest_Type) Enum() *GetConversationInviteCodeRequest_Type {
	p := new(GetConversationInviteCodeRequest_Type)
	*p = x
	return p
}

func (x GetConversationInviteCodeRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetConversationInviteCodeRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_box_conversation_proto_enumTypes[2].Descriptor()
}

func (GetConversationInviteCodeRequest_Type) Type() protoreflect.EnumType {
	return &file_box_conversation_proto_enumTypes[2]
}

func (x GetConversationInviteCodeRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetConversationInviteCodeRequest_Type.Descriptor instead.
func (GetConversationInviteCodeRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{8, 0}
}

type Conversation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId     string                `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`                 // 会话ID
	CurrentUser        *ConversationMember   `protobuf:"bytes,2,opt,name=current_user,json=currentUser,proto3" json:"current_user,omitempty"`                          //会话中最新的一条消息的用户信息
	AvatarUrl          string                `protobuf:"bytes,5,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`                                // 群组头像地址
	GroupName          string                `protobuf:"bytes,7,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`                                // conversation的名字
	MemberCount        int32                 `protobuf:"varint,8,opt,name=member_count,json=memberCount,proto3" json:"member_count,omitempty"`                         // 成员的数量
	UnreadCount        int32                 `protobuf:"varint,9,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`                         // 未读数
	Type               Conversation_Type     `protobuf:"varint,10,opt,name=type,proto3,enum=etsme.ebox.Conversation_Type" json:"type,omitempty"`                       // 会话类型
	CurrentMessageText string                `protobuf:"bytes,11,opt,name=current_message_text,json=currentMessageText,proto3" json:"current_message_text,omitempty"`  // 当前消息的文本类容
	CurrentMessageId   string                `protobuf:"bytes,12,opt,name=current_message_id,json=currentMessageId,proto3" json:"current_message_id,omitempty"`        // 当前消息ID
	CurrentMessageTime int64                 `protobuf:"varint,13,opt,name=current_message_time,json=currentMessageTime,proto3" json:"current_message_time,omitempty"` // 当前消息发送时间
	Version            int64                 `protobuf:"varint,14,opt,name=version,proto3" json:"version,omitempty"`                                                   // 当前群组信息的版本
	Status             int32                 `protobuf:"varint,15,opt,name=status,proto3" json:"status,omitempty"`                                                     // 1 表示加群审核通过，2表示加群审核没有通过。
	Top                bool                  `protobuf:"varint,16,opt,name=top,proto3" json:"top,omitempty"`                                                           // true stands for top in the conversation list
	FirstFourMembers   []*ConversationMember `protobuf:"bytes,17,rep,name=first_four_members,json=firstFourMembers,proto3" json:"first_four_members,omitempty"`        // 最早加入群聊的4个人，最多4个
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_conversation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_box_conversation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{0}
}

func (x *Conversation) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *Conversation) GetCurrentUser() *ConversationMember {
	if x != nil {
		return x.CurrentUser
	}
	return nil
}

func (x *Conversation) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *Conversation) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Conversation) GetMemberCount() int32 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *Conversation) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *Conversation) GetType() Conversation_Type {
	if x != nil {
		return x.Type
	}
	return Conversation_TypeStandard
}

func (x *Conversation) GetCurrentMessageText() string {
	if x != nil {
		return x.CurrentMessageText
	}
	return ""
}

func (x *Conversation) GetCurrentMessageId() string {
	if x != nil {
		return x.CurrentMessageId
	}
	return ""
}

func (x *Conversation) GetCurrentMessageTime() int64 {
	if x != nil {
		return x.CurrentMessageTime
	}
	return 0
}

func (x *Conversation) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Conversation) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Conversation) GetTop() bool {
	if x != nil {
		return x.Top
	}
	return false
}

func (x *Conversation) GetFirstFourMembers() []*ConversationMember {
	if x != nil {
		return x.FirstFourMembers
	}
	return nil
}

type ConversationMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                             // 群成员ID
	Nickname  string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                    // 群成员昵称
	AvatarUri string `protobuf:"bytes,3,opt,name=avatar_uri,json=avatarUri,proto3" json:"avatar_uri,omitempty"` // 群成员头像图片的key
	Status    int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                       // 审核信息：1 通过审核，2 等待审核， 3 已删除
	NoteName  string `protobuf:"bytes,6,opt,name=note_name,json=noteName,proto3" json:"note_name,omitempty"`    // 当前用户member的备注名字
	IsOwer    bool   `protobuf:"varint,10,opt,name=is_ower,json=isOwer,proto3" json:"is_ower,omitempty"`        // true标识这个member是群主
}

func (x *ConversationMember) Reset() {
	*x = ConversationMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_conversation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationMember) ProtoMessage() {}

func (x *ConversationMember) ProtoReflect() protoreflect.Message {
	mi := &file_box_conversation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationMember.ProtoReflect.Descriptor instead.
func (*ConversationMember) Descriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{1}
}

func (x *ConversationMember) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ConversationMember) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ConversationMember) GetAvatarUri() string {
	if x != nil {
		return x.AvatarUri
	}
	return ""
}

func (x *ConversationMember) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ConversationMember) GetNoteName() string {
	if x != nil {
		return x.NoteName
	}
	return ""
}

func (x *ConversationMember) GetIsOwer() bool {
	if x != nil {
		return x.IsOwer
	}
	return false
}

//=======CreateConversationOp=========
type CreateConversationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uids         []int64 `protobuf:"varint,1,rep,packed,name=uids,proto3" json:"uids,omitempty"`         // 初始的成员列表
	Name         string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                 //会话名称
	Announcement string  `protobuf:"bytes,3,opt,name=announcement,proto3" json:"announcement,omitempty"` // 公告
}

func (x *CreateConversationRequest) Reset() {
	*x = CreateConversationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_conversation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationRequest) ProtoMessage() {}

func (x *CreateConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_box_conversation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationRequest.ProtoReflect.Descriptor instead.
func (*CreateConversationRequest) Descriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{2}
}

func (x *CreateConversationRequest) GetUids() []int64 {
	if x != nil {
		return x.Uids
	}
	return nil
}

func (x *CreateConversationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateConversationRequest) GetAnnouncement() string {
	if x != nil {
		return x.Announcement
	}
	return ""
}

type CreateConversationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conversation *Conversation `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"`
	InviteCode   string        `protobuf:"bytes,2,opt,name=invite_code,json=inviteCode,proto3" json:"invite_code,omitempty"`
}

func (x *CreateConversationResponse) Reset() {
	*x = CreateConversationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_conversation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationResponse) ProtoMessage() {}

func (x *CreateConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_box_conversation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationResponse.ProtoReflect.Descriptor instead.
func (*CreateConversationResponse) Descriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{3}
}

func (x *CreateConversationResponse) GetConversation() *Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

func (x *CreateConversationResponse) GetInviteCode() string {
	if x != nil {
		return x.InviteCode
	}
	return ""
}

//=======ListConversationOp=========
type ListConversationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 筛选群组类型
	Type ListConversationRequest_Type `protobuf:"varint,1,opt,name=type,proto3,enum=etsme.ebox.ListConversationRequest_Type" json:"type,omitempty"`
	// 返回指定群组
	ConversationId string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
}

func (x *ListConversationRequest) Reset() {
	*x = ListConversationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_conversation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConversationRequest) ProtoMessage() {}

func (x *ListConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_box_conversation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConversationRequest.ProtoReflect.Descriptor instead.
func (*ListConversationRequest) Descriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{4}
}

func (x *ListConversationRequest) GetType() ListConversationRequest_Type {
	if x != nil {
		return x.Type
	}
	return ListConversationRequest_All
}

func (x *ListConversationRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

type ListConversationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conversations []*Conversation `protobuf:"bytes,1,rep,name=conversations,proto3" json:"conversations,omitempty"`
}

func (x *ListConversationResponse) Reset() {
	*x = ListConversationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_conversation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConversationResponse) ProtoMessage() {}

func (x *ListConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_box_conversation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConversationResponse.ProtoReflect.Descriptor instead.
func (*ListConversationResponse) Descriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{5}
}

func (x *ListConversationResponse) GetConversations() []*Conversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

//=======ListConversationMembersOp=========
type ListConversationMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
}

func (x *ListConversationMembersRequest) Reset() {
	*x = ListConversationMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_conversation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConversationMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConversationMembersRequest) ProtoMessage() {}

func (x *ListConversationMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_box_conversation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConversationMembersRequest.ProtoReflect.Descriptor instead.
func (*ListConversationMembersRequest) Descriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{6}
}

func (x *ListConversationMembersRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

type ListConversationMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Members []*ConversationMember `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"` //
}

func (x *ListConversationMembersResponse) Reset() {
	*x = ListConversationMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_conversation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConversationMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConversationMembersResponse) ProtoMessage() {}

func (x *ListConversationMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_box_conversation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConversationMembersResponse.ProtoReflect.Descriptor instead.
func (*ListConversationMembersResponse) Descriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{7}
}

func (x *ListConversationMembersResponse) GetMembers() []*ConversationMember {
	if x != nil {
		return x.Members
	}
	return nil
}

//=======GetConversationInviteCodeOp=========
type GetConversationInviteCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId string                                `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	Type           GetConversationInviteCodeRequest_Type `protobuf:"varint,2,opt,name=type,proto3,enum=etsme.ebox.GetConversationInviteCodeRequest_Type" json:"type,omitempty"`
}

func (x *GetConversationInviteCodeRequest) Reset() {
	*x = GetConversationInviteCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_conversation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationInviteCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationInviteCodeRequest) ProtoMessage() {}

func (x *GetConversationInviteCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_box_conversation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationInviteCodeRequest.ProtoReflect.Descriptor instead.
func (*GetConversationInviteCodeRequest) Descriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{8}
}

func (x *GetConversationInviteCodeRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *GetConversationInviteCodeRequest) GetType() GetConversationInviteCodeRequest_Type {
	if x != nil {
		return x.Type
	}
	return GetConversationInviteCodeRequest_Public
}

type GetConversationInviteCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteCode string `protobuf:"bytes,1,opt,name=invite_code,json=inviteCode,proto3" json:"invite_code,omitempty"`
}

func (x *GetConversationInviteCodeResponse) Reset() {
	*x = GetConversationInviteCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_conversation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationInviteCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationInviteCodeResponse) ProtoMessage() {}

func (x *GetConversationInviteCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_box_conversation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationInviteCodeResponse.ProtoReflect.Descriptor instead.
func (*GetConversationInviteCodeResponse) Descriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{9}
}

func (x *GetConversationInviteCodeResponse) GetInviteCode() string {
	if x != nil {
		return x.InviteCode
	}
	return ""
}

//=======GetMemberProfileOp=========
type GetMemberProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	Uid            int64  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetMemberProfileRequest) Reset() {
	*x = GetMemberProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_conversation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemberProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemberProfileRequest) ProtoMessage() {}

func (x *GetMemberProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_box_conversation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemberProfileRequest.ProtoReflect.Descriptor instead.
func (*GetMemberProfileRequest) Descriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{10}
}

func (x *GetMemberProfileRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *GetMemberProfileRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetMemberProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 成员在群内的基本信息
	Profile *ConversationMember `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *GetMemberProfileResponse) Reset() {
	*x = GetMemberProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_conversation_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemberProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemberProfileResponse) ProtoMessage() {}

func (x *GetMemberProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_box_conversation_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemberProfileResponse.ProtoReflect.Descriptor instead.
func (*GetMemberProfileResponse) Descriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{11}
}

func (x *GetMemberProfileResponse) GetProfile() *ConversationMember {
	if x != nil {
		return x.Profile
	}
	return nil
}

//========TopConversationOp=====
type TopConversationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//群ID
	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// true for top, false for untop
	IsTop bool `protobuf:"varint,2,opt,name=is_top,json=isTop,proto3" json:"is_top,omitempty"`
}

func (x *TopConversationRequest) Reset() {
	*x = TopConversationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_conversation_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopConversationRequest) ProtoMessage() {}

func (x *TopConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_box_conversation_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopConversationRequest.ProtoReflect.Descriptor instead.
func (*TopConversationRequest) Descriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{12}
}

func (x *TopConversationRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *TopConversationRequest) GetIsTop() bool {
	if x != nil {
		return x.IsTop
	}
	return false
}

//========UpdateMemberNote=====
type UpdateMemberNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId       int64  `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	NoteName       string `protobuf:"bytes,2,opt,name=note_name,json=noteName,proto3" json:"note_name,omitempty"`
	ConversationId string `protobuf:"bytes,3,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
}

func (x *UpdateMemberNoteRequest) Reset() {
	*x = UpdateMemberNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_conversation_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberNoteRequest) ProtoMessage() {}

func (x *UpdateMemberNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_box_conversation_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberNoteRequest.ProtoReflect.Descriptor instead.
func (*UpdateMemberNoteRequest) Descriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateMemberNoteRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *UpdateMemberNoteRequest) GetNoteName() string {
	if x != nil {
		return x.NoteName
	}
	return ""
}

func (x *UpdateMemberNoteRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

//========UpdateConversationNameOp========
type UpdateConversationNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 群组会话 id
	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 群名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateConversationNameRequest) Reset() {
	*x = UpdateConversationNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_conversation_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConversationNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConversationNameRequest) ProtoMessage() {}

func (x *UpdateConversationNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_box_conversation_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConversationNameRequest.ProtoReflect.Descriptor instead.
func (*UpdateConversationNameRequest) Descriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateConversationNameRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *UpdateConversationNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

//========UpdateProfileInConversationOp========
type UpdateProfileInConversationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 群组会话 id
	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 群名
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *UpdateProfileInConversationRequest) Reset() {
	*x = UpdateProfileInConversationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_conversation_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProfileInConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfileInConversationRequest) ProtoMessage() {}

func (x *UpdateProfileInConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_box_conversation_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfileInConversationRequest.ProtoReflect.Descriptor instead.
func (*UpdateProfileInConversationRequest) Descriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateProfileInConversationRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *UpdateProfileInConversationRequest) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

//========DisbandConversationOp========
type DisbandConversationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 群组会话 id
	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
}

func (x *DisbandConversationRequest) Reset() {
	*x = DisbandConversationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_conversation_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisbandConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisbandConversationRequest) ProtoMessage() {}

func (x *DisbandConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_box_conversation_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisbandConversationRequest.ProtoReflect.Descriptor instead.
func (*DisbandConversationRequest) Descriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{16}
}

func (x *DisbandConversationRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

//========KickOutConversationMemberOp========
type KickOutConversationMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 群组会话 id
	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 群成员 id
	MemberId []int64 `protobuf:"varint,2,rep,packed,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
}

func (x *KickOutConversationMemberRequest) Reset() {
	*x = KickOutConversationMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_conversation_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickOutConversationMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickOutConversationMemberRequest) ProtoMessage() {}

func (x *KickOutConversationMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_box_conversation_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickOutConversationMemberRequest.ProtoReflect.Descriptor instead.
func (*KickOutConversationMemberRequest) Descriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{17}
}

func (x *KickOutConversationMemberRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *KickOutConversationMemberRequest) GetMemberId() []int64 {
	if x != nil {
		return x.MemberId
	}
	return nil
}

//========LeaveConversationOp========
type LeaveConversationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 群组会话 id
	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
}

func (x *LeaveConversationRequest) Reset() {
	*x = LeaveConversationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_conversation_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveConversationRequest) ProtoMessage() {}

func (x *LeaveConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_box_conversation_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveConversationRequest.ProtoReflect.Descriptor instead.
func (*LeaveConversationRequest) Descriptor() ([]byte, []int) {
	return file_box_conversation_proto_rawDescGZIP(), []int{18}
}

func (x *LeaveConversationRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

var File_box_conversation_proto protoreflect.FileDescriptor

var file_box_conversation_proto_rawDesc = []byte{
	0x0a, 0x16, 0x62, 0x6f, 0x78, 0x2f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x65, 0x74, 0x73, 0x6d, 0x65, 0x2e,
	0x65, 0x62, 0x6f, 0x78, 0x22, 0x9f, 0x05, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x41,
	0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x74, 0x73, 0x6d, 0x65, 0x2e, 0x65, 0x62, 0x6f,
	0x78, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x65, 0x74, 0x73, 0x6d, 0x65, 0x2e, 0x65, 0x62, 0x6f, 0x78,
	0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x6f, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x4c,
	0x0a, 0x12, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x72, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x74, 0x73,
	0x6d, 0x65, 0x2e, 0x65, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x10, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x46, 0x6f, 0x75, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x48, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x79, 0x70, 0x65, 0x45, 0x74,
	0x73, 0x6d, 0x65, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x64, 0x10, 0x03, 0x22, 0xaf, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x4f, 0x77, 0x65, 0x72, 0x22, 0x67, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x04, 0x75, 0x69, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x7b, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x74, 0x73, 0x6d, 0x65, 0x2e, 0x65, 0x62,
	0x6f, 0x78, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xaa,
	0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x65, 0x74, 0x73, 0x6d, 0x65,
	0x2e, 0x65, 0x62, 0x6f, 0x78, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x28, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x6c, 0x6c,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x10, 0x02, 0x22, 0x5a, 0x0a, 0x18, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x65, 0x74, 0x73, 0x6d, 0x65, 0x2e, 0x65, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x49, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x5b, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x74, 0x73, 0x6d, 0x65, 0x2e, 0x65,
	0x62, 0x6f, 0x78, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22,
	0xb3, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x45, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x65, 0x74,
	0x73, 0x6d, 0x65, 0x2e, 0x65, 0x62, 0x6f, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x1f, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x10, 0x01, 0x22, 0x44, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x54, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x22, 0x54, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x65, 0x74, 0x73, 0x6d, 0x65, 0x2e, 0x65, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x58, 0x0a, 0x16, 0x54, 0x6f, 0x70, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73,
	0x5f, 0x74, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x54, 0x6f,
	0x70, 0x22, 0x7c, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x74,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x5c, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x69, 0x0a,
	0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x1a, 0x44, 0x69, 0x73, 0x62,
	0x61, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x68, 0x0a, 0x20, 0x4b, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x18, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x65,
	0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x74, 0x73, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x62, 0x6f, 0x78, 0x42, 0x10, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2c, 0x67, 0x69,
	0x74, 0x6c, 0x61, 0x62, 0x2e, 0x65, 0x74, 0x73, 0x75, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x2f, 0x65,
	0x62, 0x6f, 0x78, 0x2f, 0x65, 0x62, 0x6f, 0x78, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2d,
	0x61, 0x70, 0x69, 0x2f, 0x65, 0x62, 0x6f, 0x78, 0x70, 0x62, 0xf8, 0x01, 0x01, 0xa2, 0x02, 0x05,
	0x45, 0x50, 0x42, 0x6f, 0x78, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_box_conversation_proto_rawDescOnce sync.Once
	file_box_conversation_proto_rawDescData = file_box_conversation_proto_rawDesc
)

func file_box_conversation_proto_rawDescGZIP() []byte {
	file_box_conversation_proto_rawDescOnce.Do(func() {
		file_box_conversation_proto_rawDescData = protoimpl.X.CompressGZIP(file_box_conversation_proto_rawDescData)
	})
	return file_box_conversation_proto_rawDescData
}

var file_box_conversation_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_box_conversation_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_box_conversation_proto_goTypes = []interface{}{
	(Conversation_Type)(0),                     // 0: etsme.ebox.Conversation.Type
	(ListConversationRequest_Type)(0),          // 1: etsme.ebox.ListConversationRequest.Type
	(GetConversationInviteCodeRequest_Type)(0), // 2: etsme.ebox.GetConversationInviteCodeRequest.Type
	(*Conversation)(nil),                       // 3: etsme.ebox.Conversation
	(*ConversationMember)(nil),                 // 4: etsme.ebox.ConversationMember
	(*CreateConversationRequest)(nil),          // 5: etsme.ebox.CreateConversationRequest
	(*CreateConversationResponse)(nil),         // 6: etsme.ebox.CreateConversationResponse
	(*ListConversationRequest)(nil),            // 7: etsme.ebox.ListConversationRequest
	(*ListConversationResponse)(nil),           // 8: etsme.ebox.ListConversationResponse
	(*ListConversationMembersRequest)(nil),     // 9: etsme.ebox.ListConversationMembersRequest
	(*ListConversationMembersResponse)(nil),    // 10: etsme.ebox.ListConversationMembersResponse
	(*GetConversationInviteCodeRequest)(nil),   // 11: etsme.ebox.GetConversationInviteCodeRequest
	(*GetConversationInviteCodeResponse)(nil),  // 12: etsme.ebox.GetConversationInviteCodeResponse
	(*GetMemberProfileRequest)(nil),            // 13: etsme.ebox.GetMemberProfileRequest
	(*GetMemberProfileResponse)(nil),           // 14: etsme.ebox.GetMemberProfileResponse
	(*TopConversationRequest)(nil),             // 15: etsme.ebox.TopConversationRequest
	(*UpdateMemberNoteRequest)(nil),            // 16: etsme.ebox.UpdateMemberNoteRequest
	(*UpdateConversationNameRequest)(nil),      // 17: etsme.ebox.UpdateConversationNameRequest
	(*UpdateProfileInConversationRequest)(nil), // 18: etsme.ebox.UpdateProfileInConversationRequest
	(*DisbandConversationRequest)(nil),         // 19: etsme.ebox.DisbandConversationRequest
	(*KickOutConversationMemberRequest)(nil),   // 20: etsme.ebox.KickOutConversationMemberRequest
	(*LeaveConversationRequest)(nil),           // 21: etsme.ebox.LeaveConversationRequest
}
var file_box_conversation_proto_depIdxs = []int32{
	4, // 0: etsme.ebox.Conversation.current_user:type_name -> etsme.ebox.ConversationMember
	0, // 1: etsme.ebox.Conversation.type:type_name -> etsme.ebox.Conversation.Type
	4, // 2: etsme.ebox.Conversation.first_four_members:type_name -> etsme.ebox.ConversationMember
	3, // 3: etsme.ebox.CreateConversationResponse.conversation:type_name -> etsme.ebox.Conversation
	1, // 4: etsme.ebox.ListConversationRequest.type:type_name -> etsme.ebox.ListConversationRequest.Type
	3, // 5: etsme.ebox.ListConversationResponse.conversations:type_name -> etsme.ebox.Conversation
	4, // 6: etsme.ebox.ListConversationMembersResponse.members:type_name -> etsme.ebox.ConversationMember
	2, // 7: etsme.ebox.GetConversationInviteCodeRequest.type:type_name -> etsme.ebox.GetConversationInviteCodeRequest.Type
	4, // 8: etsme.ebox.GetMemberProfileResponse.profile:type_name -> etsme.ebox.ConversationMember
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_box_conversation_proto_init() }
func file_box_conversation_proto_init() {
	if File_box_conversation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_box_conversation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conversation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_conversation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_conversation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConversationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_conversation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConversationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_conversation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConversationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_conversation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConversationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_conversation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConversationMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_conversation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConversationMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_conversation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationInviteCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_conversation_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationInviteCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_conversation_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMemberProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_conversation_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMemberProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_conversation_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopConversationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_conversation_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_conversation_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConversationNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_conversation_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProfileInConversationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_conversation_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisbandConversationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_conversation_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickOutConversationMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_conversation_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveConversationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_box_conversation_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_box_conversation_proto_goTypes,
		DependencyIndexes: file_box_conversation_proto_depIdxs,
		EnumInfos:         file_box_conversation_proto_enumTypes,
		MessageInfos:      file_box_conversation_proto_msgTypes,
	}.Build()
	File_box_conversation_proto = out.File
	file_box_conversation_proto_rawDesc = nil
	file_box_conversation_proto_goTypes = nil
	file_box_conversation_proto_depIdxs = nil
}
