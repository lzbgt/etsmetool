// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: box/filetransfer.proto

package eboxpb

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type InterBoxFileTransferStatusResponse_TransferStatus int32

const (
	InterBoxFileTransferStatusResponse_Unknown    InterBoxFileTransferStatusResponse_TransferStatus = 0
	InterBoxFileTransferStatusResponse_InProgress InterBoxFileTransferStatusResponse_TransferStatus = 1
	InterBoxFileTransferStatusResponse_Success    InterBoxFileTransferStatusResponse_TransferStatus = 2
	InterBoxFileTransferStatusResponse_Failed     InterBoxFileTransferStatusResponse_TransferStatus = 3
)

// Enum value maps for InterBoxFileTransferStatusResponse_TransferStatus.
var (
	InterBoxFileTransferStatusResponse_TransferStatus_name = map[int32]string{
		0: "Unknown",
		1: "InProgress",
		2: "Success",
		3: "Failed",
	}
	InterBoxFileTransferStatusResponse_TransferStatus_value = map[string]int32{
		"Unknown":    0,
		"InProgress": 1,
		"Success":    2,
		"Failed":     3,
	}
)

func (x InterBoxFileTransferStatusResponse_TransferStatus) Enum() *InterBoxFileTransferStatusResponse_TransferStatus {
	p := new(InterBoxFileTransferStatusResponse_TransferStatus)
	*p = x
	return p
}

func (x InterBoxFileTransferStatusResponse_TransferStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InterBoxFileTransferStatusResponse_TransferStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_box_filetransfer_proto_enumTypes[0].Descriptor()
}

func (InterBoxFileTransferStatusResponse_TransferStatus) Type() protoreflect.EnumType {
	return &file_box_filetransfer_proto_enumTypes[0]
}

func (x InterBoxFileTransferStatusResponse_TransferStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InterBoxFileTransferStatusResponse_TransferStatus.Descriptor instead.
func (InterBoxFileTransferStatusResponse_TransferStatus) EnumDescriptor() ([]byte, []int) {
	return file_box_filetransfer_proto_rawDescGZIP(), []int{3, 0}
}

// 移动端请求 转发文件
type InterBoxFileTransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid            int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	TaskId         int64    `protobuf:"varint,2,opt,name=taskId,proto3" json:"taskId,omitempty"`                // 移动端不需要填充
	TargetGroupId  string   `protobuf:"bytes,3,opt,name=targetGroupId,proto3" json:"targetGroupId,omitempty"`   // 目标群ID hex string
	TargetMemberId string   `protobuf:"bytes,4,opt,name=targetMemberId,proto3" json:"targetMemberId,omitempty"` // 目标群成员ID. 空字符串表示群主
	NodeId         string   `protobuf:"bytes,5,opt,name=nodeId,proto3" json:"nodeId,omitempty"`                 // 当前协议不解析
	IsDownload     bool     `protobuf:"varint,6,opt,name=isDownload,proto3" json:"isDownload,omitempty"`        // default 0 - upload; 1 - download is used by ebox internal(and both for APP)
	FileUris       []string `protobuf:"bytes,7,rep,name=fileUris,proto3" json:"fileUris,omitempty"`
}

func (x *InterBoxFileTransferRequest) Reset() {
	*x = InterBoxFileTransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_filetransfer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterBoxFileTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterBoxFileTransferRequest) ProtoMessage() {}

func (x *InterBoxFileTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_box_filetransfer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterBoxFileTransferRequest.ProtoReflect.Descriptor instead.
func (*InterBoxFileTransferRequest) Descriptor() ([]byte, []int) {
	return file_box_filetransfer_proto_rawDescGZIP(), []int{0}
}

func (x *InterBoxFileTransferRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *InterBoxFileTransferRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *InterBoxFileTransferRequest) GetTargetGroupId() string {
	if x != nil {
		return x.TargetGroupId
	}
	return ""
}

func (x *InterBoxFileTransferRequest) GetTargetMemberId() string {
	if x != nil {
		return x.TargetMemberId
	}
	return ""
}

func (x *InterBoxFileTransferRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *InterBoxFileTransferRequest) GetIsDownload() bool {
	if x != nil {
		return x.IsDownload
	}
	return false
}

func (x *InterBoxFileTransferRequest) GetFileUris() []string {
	if x != nil {
		return x.FileUris
	}
	return nil
}

// 响应
type InterBoxFileTransferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId int64 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *InterBoxFileTransferResponse) Reset() {
	*x = InterBoxFileTransferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_filetransfer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterBoxFileTransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterBoxFileTransferResponse) ProtoMessage() {}

func (x *InterBoxFileTransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_box_filetransfer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterBoxFileTransferResponse.ProtoReflect.Descriptor instead.
func (*InterBoxFileTransferResponse) Descriptor() ([]byte, []int) {
	return file_box_filetransfer_proto_rawDescGZIP(), []int{1}
}

func (x *InterBoxFileTransferResponse) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

// 移动端请求 任务状态
type DurableTaskStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskIds []int64 `protobuf:"varint,1,rep,packed,name=taskIds,proto3" json:"taskIds,omitempty"`
}

func (x *DurableTaskStatusRequest) Reset() {
	*x = DurableTaskStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_filetransfer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DurableTaskStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DurableTaskStatusRequest) ProtoMessage() {}

func (x *DurableTaskStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_box_filetransfer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DurableTaskStatusRequest.ProtoReflect.Descriptor instead.
func (*DurableTaskStatusRequest) Descriptor() ([]byte, []int) {
	return file_box_filetransfer_proto_rawDescGZIP(), []int{2}
}

func (x *DurableTaskStatusRequest) GetTaskIds() []int64 {
	if x != nil {
		return x.TaskIds
	}
	return nil
}

// 文件转发状态响应
type InterBoxFileTransferStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress []*InterBoxFileTransferStatusResponse_Progress `protobuf:"bytes,2,rep,name=progress,proto3" json:"progress,omitempty"`
}

func (x *InterBoxFileTransferStatusResponse) Reset() {
	*x = InterBoxFileTransferStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_filetransfer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterBoxFileTransferStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterBoxFileTransferStatusResponse) ProtoMessage() {}

func (x *InterBoxFileTransferStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_box_filetransfer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterBoxFileTransferStatusResponse.ProtoReflect.Descriptor instead.
func (*InterBoxFileTransferStatusResponse) Descriptor() ([]byte, []int) {
	return file_box_filetransfer_proto_rawDescGZIP(), []int{3}
}

func (x *InterBoxFileTransferStatusResponse) GetProgress() []*InterBoxFileTransferStatusResponse_Progress {
	if x != nil {
		return x.Progress
	}
	return nil
}

// 取消文件转发任务
type CancelDurableTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId int64 `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *CancelDurableTaskRequest) Reset() {
	*x = CancelDurableTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_filetransfer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelDurableTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelDurableTaskRequest) ProtoMessage() {}

func (x *CancelDurableTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_box_filetransfer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelDurableTaskRequest.ProtoReflect.Descriptor instead.
func (*CancelDurableTaskRequest) Descriptor() ([]byte, []int) {
	return file_box_filetransfer_proto_rawDescGZIP(), []int{4}
}

func (x *CancelDurableTaskRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

// 查询任务
type GetDurableTaskIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   *timestamp.Timestamp `protobuf:"bytes,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *GetDurableTaskIDsRequest) Reset() {
	*x = GetDurableTaskIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_filetransfer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDurableTaskIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDurableTaskIDsRequest) ProtoMessage() {}

func (x *GetDurableTaskIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_box_filetransfer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDurableTaskIDsRequest.ProtoReflect.Descriptor instead.
func (*GetDurableTaskIDsRequest) Descriptor() ([]byte, []int) {
	return file_box_filetransfer_proto_rawDescGZIP(), []int{5}
}

func (x *GetDurableTaskIDsRequest) GetStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetDurableTaskIDsRequest) GetEndTime() *timestamp.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type InterBoxFileTransferStatusResponse_Progress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId   int64                                             `protobuf:"varint,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Param    string                                            `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"` // task param query string
	Status   InterBoxFileTransferStatusResponse_TransferStatus `protobuf:"varint,3,opt,name=status,proto3,enum=etsme.ebox.filetransfer.InterBoxFileTransferStatusResponse_TransferStatus" json:"status,omitempty"`
	Percents int32                                             `protobuf:"varint,4,opt,name=percents,proto3" json:"percents,omitempty"`
	Errormsg string                                            `protobuf:"bytes,5,opt,name=errormsg,proto3" json:"errormsg,omitempty"`
}

func (x *InterBoxFileTransferStatusResponse_Progress) Reset() {
	*x = InterBoxFileTransferStatusResponse_Progress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_filetransfer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterBoxFileTransferStatusResponse_Progress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterBoxFileTransferStatusResponse_Progress) ProtoMessage() {}

func (x *InterBoxFileTransferStatusResponse_Progress) ProtoReflect() protoreflect.Message {
	mi := &file_box_filetransfer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterBoxFileTransferStatusResponse_Progress.ProtoReflect.Descriptor instead.
func (*InterBoxFileTransferStatusResponse_Progress) Descriptor() ([]byte, []int) {
	return file_box_filetransfer_proto_rawDescGZIP(), []int{3, 0}
}

func (x *InterBoxFileTransferStatusResponse_Progress) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *InterBoxFileTransferStatusResponse_Progress) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

func (x *InterBoxFileTransferStatusResponse_Progress) GetStatus() InterBoxFileTransferStatusResponse_TransferStatus {
	if x != nil {
		return x.Status
	}
	return InterBoxFileTransferStatusResponse_Unknown
}

func (x *InterBoxFileTransferStatusResponse_Progress) GetPercents() int32 {
	if x != nil {
		return x.Percents
	}
	return 0
}

func (x *InterBoxFileTransferStatusResponse_Progress) GetErrormsg() string {
	if x != nil {
		return x.Errormsg
	}
	return ""
}

var File_box_filetransfer_proto protoreflect.FileDescriptor

var file_box_filetransfer_proto_rawDesc = []byte{
	0x0a, 0x16, 0x62, 0x6f, 0x78, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x65, 0x74, 0x73, 0x6d, 0x65, 0x2e,
	0x65, 0x62, 0x6f, 0x78, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xe9, 0x01, 0x0a, 0x1b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x6f, 0x78, 0x46,
	0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x69, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x69, 0x73, 0x22, 0x36,
	0x0a, 0x1c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x6f, 0x78, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x18, 0x44, 0x75, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x73, 0x22, 0xa5, 0x03, 0x0a,
	0x22, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x6f, 0x78, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x65, 0x74, 0x73, 0x6d, 0x65, 0x2e, 0x65, 0x62,
	0x6f, 0x78, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x6f, 0x78, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x1a, 0xd4, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x62, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x4a, 0x2e, 0x65, 0x74, 0x73, 0x6d, 0x65, 0x2e, 0x65, 0x62, 0x6f, 0x78, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x42, 0x6f, 0x78, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x6d, 0x73, 0x67, 0x22, 0x46, 0x0a, 0x0e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x49,
	0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x10, 0x03, 0x22, 0x32, 0x0a, 0x18, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x44, 0x75,
	0x72, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x44, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x66, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x74, 0x73,
	0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x62, 0x6f, 0x78, 0x42,
	0x11, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x65, 0x74, 0x73,
	0x75, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x2f, 0x65, 0x62, 0x6f, 0x78, 0x2f, 0x65, 0x62, 0x6f, 0x78,
	0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x62, 0x6f, 0x78,
	0x70, 0x62, 0xf8, 0x01, 0x01, 0xa2, 0x02, 0x05, 0x45, 0x50, 0x42, 0x6f, 0x78, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_box_filetransfer_proto_rawDescOnce sync.Once
	file_box_filetransfer_proto_rawDescData = file_box_filetransfer_proto_rawDesc
)

func file_box_filetransfer_proto_rawDescGZIP() []byte {
	file_box_filetransfer_proto_rawDescOnce.Do(func() {
		file_box_filetransfer_proto_rawDescData = protoimpl.X.CompressGZIP(file_box_filetransfer_proto_rawDescData)
	})
	return file_box_filetransfer_proto_rawDescData
}

var file_box_filetransfer_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_box_filetransfer_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_box_filetransfer_proto_goTypes = []interface{}{
	(InterBoxFileTransferStatusResponse_TransferStatus)(0), // 0: etsme.ebox.filetransfer.InterBoxFileTransferStatusResponse.TransferStatus
	(*InterBoxFileTransferRequest)(nil),                    // 1: etsme.ebox.filetransfer.InterBoxFileTransferRequest
	(*InterBoxFileTransferResponse)(nil),                   // 2: etsme.ebox.filetransfer.InterBoxFileTransferResponse
	(*DurableTaskStatusRequest)(nil),                       // 3: etsme.ebox.filetransfer.DurableTaskStatusRequest
	(*InterBoxFileTransferStatusResponse)(nil),             // 4: etsme.ebox.filetransfer.InterBoxFileTransferStatusResponse
	(*CancelDurableTaskRequest)(nil),                       // 5: etsme.ebox.filetransfer.CancelDurableTaskRequest
	(*GetDurableTaskIDsRequest)(nil),                       // 6: etsme.ebox.filetransfer.GetDurableTaskIDsRequest
	(*InterBoxFileTransferStatusResponse_Progress)(nil),    // 7: etsme.ebox.filetransfer.InterBoxFileTransferStatusResponse.Progress
	(*timestamp.Timestamp)(nil),                            // 8: google.protobuf.Timestamp
}
var file_box_filetransfer_proto_depIdxs = []int32{
	7, // 0: etsme.ebox.filetransfer.InterBoxFileTransferStatusResponse.progress:type_name -> etsme.ebox.filetransfer.InterBoxFileTransferStatusResponse.Progress
	8, // 1: etsme.ebox.filetransfer.GetDurableTaskIDsRequest.startTime:type_name -> google.protobuf.Timestamp
	8, // 2: etsme.ebox.filetransfer.GetDurableTaskIDsRequest.endTime:type_name -> google.protobuf.Timestamp
	0, // 3: etsme.ebox.filetransfer.InterBoxFileTransferStatusResponse.Progress.status:type_name -> etsme.ebox.filetransfer.InterBoxFileTransferStatusResponse.TransferStatus
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_box_filetransfer_proto_init() }
func file_box_filetransfer_proto_init() {
	if File_box_filetransfer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_box_filetransfer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterBoxFileTransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_filetransfer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterBoxFileTransferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_filetransfer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DurableTaskStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_filetransfer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterBoxFileTransferStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_filetransfer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelDurableTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_filetransfer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDurableTaskIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_filetransfer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterBoxFileTransferStatusResponse_Progress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_box_filetransfer_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_box_filetransfer_proto_goTypes,
		DependencyIndexes: file_box_filetransfer_proto_depIdxs,
		EnumInfos:         file_box_filetransfer_proto_enumTypes,
		MessageInfos:      file_box_filetransfer_proto_msgTypes,
	}.Build()
	File_box_filetransfer_proto = out.File
	file_box_filetransfer_proto_rawDesc = nil
	file_box_filetransfer_proto_goTypes = nil
	file_box_filetransfer_proto_depIdxs = nil
}
