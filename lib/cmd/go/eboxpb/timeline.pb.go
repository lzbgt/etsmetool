// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: box/timeline.proto

package eboxpb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TimelineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 来源群组网络ID
	ConversationId []string `protobuf:"bytes,1,rep,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	Page           int32    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size           int32    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *TimelineRequest) Reset() {
	*x = TimelineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_timeline_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineRequest) ProtoMessage() {}

func (x *TimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_box_timeline_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineRequest.ProtoReflect.Descriptor instead.
func (*TimelineRequest) Descriptor() ([]byte, []int) {
	return file_box_timeline_proto_rawDescGZIP(), []int{0}
}

func (x *TimelineRequest) GetConversationId() []string {
	if x != nil {
		return x.ConversationId
	}
	return nil
}

func (x *TimelineRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *TimelineRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type TimelineItemAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//文件路径
	Uri string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	//文件MD5
	Md5 string `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`
	//文件名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	//视频或者图片的宽度
	Width int32 `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	//视频或者图片的高度
	Height int32 `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	//视频或音频消息播放时间，单位毫秒
	PlayMillisecond int64 `protobuf:"varint,6,opt,name=play_millisecond,json=playMillisecond,proto3" json:"play_millisecond,omitempty"`
	//文件的大小，单位byte
	ByteSize int64 `protobuf:"varint,7,opt,name=byte_size,json=byteSize,proto3" json:"byte_size,omitempty"`
	//时间
	Time int64 `protobuf:"varint,8,opt,name=time,proto3" json:"time,omitempty"`
	//文件类型
	Category FileCategory `protobuf:"varint,9,opt,name=category,proto3,enum=etsme.ebox.file.FileCategory" json:"category,omitempty"`
	// 来源群组ID
	SourceConversationId string `protobuf:"bytes,10,opt,name=source_conversation_id,json=sourceConversationId,proto3" json:"source_conversation_id,omitempty"`
	// 来源群组名称
	SourceConversationName string `protobuf:"bytes,11,opt,name=source_conversation_name,json=sourceConversationName,proto3" json:"source_conversation_name,omitempty"`
	//文件来源的用户的NwID
	FromUserNwid string `protobuf:"bytes,12,opt,name=from_user_nwid,json=fromUserNwid,proto3" json:"from_user_nwid,omitempty"`
	//文件来源的用户的NodeID
	FromUserNodeId string `protobuf:"bytes,13,opt,name=from_user_node_id,json=fromUserNodeId,proto3" json:"from_user_node_id,omitempty"`
}

func (x *TimelineItemAttachment) Reset() {
	*x = TimelineItemAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_timeline_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimelineItemAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineItemAttachment) ProtoMessage() {}

func (x *TimelineItemAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_box_timeline_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineItemAttachment.ProtoReflect.Descriptor instead.
func (*TimelineItemAttachment) Descriptor() ([]byte, []int) {
	return file_box_timeline_proto_rawDescGZIP(), []int{1}
}

func (x *TimelineItemAttachment) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *TimelineItemAttachment) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *TimelineItemAttachment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TimelineItemAttachment) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *TimelineItemAttachment) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *TimelineItemAttachment) GetPlayMillisecond() int64 {
	if x != nil {
		return x.PlayMillisecond
	}
	return 0
}

func (x *TimelineItemAttachment) GetByteSize() int64 {
	if x != nil {
		return x.ByteSize
	}
	return 0
}

func (x *TimelineItemAttachment) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *TimelineItemAttachment) GetCategory() FileCategory {
	if x != nil {
		return x.Category
	}
	return FileCategory_All
}

func (x *TimelineItemAttachment) GetSourceConversationId() string {
	if x != nil {
		return x.SourceConversationId
	}
	return ""
}

func (x *TimelineItemAttachment) GetSourceConversationName() string {
	if x != nil {
		return x.SourceConversationName
	}
	return ""
}

func (x *TimelineItemAttachment) GetFromUserNwid() string {
	if x != nil {
		return x.FromUserNwid
	}
	return ""
}

func (x *TimelineItemAttachment) GetFromUserNodeId() string {
	if x != nil {
		return x.FromUserNodeId
	}
	return ""
}

type TimelineItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 类型
	Category InstantMessage_MessageType `protobuf:"varint,1,opt,name=category,proto3,enum=etsme.ebox.InstantMessage_MessageType" json:"category,omitempty"`
	// 更新时间
	Time       int64                     `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	Attachment []*TimelineItemAttachment `protobuf:"bytes,3,rep,name=attachment,proto3" json:"attachment,omitempty"`
	// 文件大小
	ByteSize int64 `protobuf:"varint,4,opt,name=byte_size,json=byteSize,proto3" json:"byte_size,omitempty"`
	// 自动备份的图片数目
	Count int32  `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	Mid   string `protobuf:"bytes,6,opt,name=mid,proto3" json:"mid,omitempty"`
}

func (x *TimelineItem) Reset() {
	*x = TimelineItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_timeline_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimelineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineItem) ProtoMessage() {}

func (x *TimelineItem) ProtoReflect() protoreflect.Message {
	mi := &file_box_timeline_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineItem.ProtoReflect.Descriptor instead.
func (*TimelineItem) Descriptor() ([]byte, []int) {
	return file_box_timeline_proto_rawDescGZIP(), []int{2}
}

func (x *TimelineItem) GetCategory() InstantMessage_MessageType {
	if x != nil {
		return x.Category
	}
	return InstantMessage_TEXT
}

func (x *TimelineItem) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *TimelineItem) GetAttachment() []*TimelineItemAttachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *TimelineItem) GetByteSize() int64 {
	if x != nil {
		return x.ByteSize
	}
	return 0
}

func (x *TimelineItem) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TimelineItem) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

//全局搜索
type TimelineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item []*TimelineItem `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
	Page int32           `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size int32           `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *TimelineResponse) Reset() {
	*x = TimelineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_box_timeline_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineResponse) ProtoMessage() {}

func (x *TimelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_box_timeline_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineResponse.ProtoReflect.Descriptor instead.
func (*TimelineResponse) Descriptor() ([]byte, []int) {
	return file_box_timeline_proto_rawDescGZIP(), []int{3}
}

func (x *TimelineResponse) GetItem() []*TimelineItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *TimelineResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *TimelineResponse) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

var File_box_timeline_proto protoreflect.FileDescriptor

var file_box_timeline_proto_rawDesc = []byte{
	0x0a, 0x12, 0x62, 0x6f, 0x78, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x65, 0x74, 0x73, 0x6d, 0x65, 0x2e, 0x65, 0x62, 0x6f, 0x78,
	0x1a, 0x0c, 0x62, 0x6f, 0x78, 0x2f, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e,
	0x62, 0x6f, 0x78, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x62,
	0x0a, 0x0f, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x22, 0xd6, 0x03, 0x0a, 0x16, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64,
	0x35, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6d, 0x69, 0x6c, 0x6c,
	0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70,
	0x6c, 0x61, 0x79, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x62, 0x79, 0x74, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x39, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x65, 0x74, 0x73, 0x6d, 0x65, 0x2e, 0x65, 0x62, 0x6f, 0x78, 0x2e, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x38, 0x0a, 0x18, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x16, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x77, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x77, 0x69, 0x64,
	0x12, 0x29, 0x0a, 0x11, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x72, 0x6f,
	0x6d, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0xef, 0x01, 0x0a, 0x0c,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x42, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26,
	0x2e, 0x65, 0x74, 0x73, 0x6d, 0x65, 0x2e, 0x65, 0x62, 0x6f, 0x78, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x74, 0x73, 0x6d, 0x65,
	0x2e, 0x65, 0x62, 0x6f, 0x78, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x79, 0x74, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x79, 0x74,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x22, 0x68, 0x0a,
	0x10, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2c, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x65, 0x74, 0x73, 0x6d, 0x65, 0x2e, 0x65, 0x62, 0x6f, 0x78, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x62, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x65,
	0x74, 0x73, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x62, 0x6f,
	0x78, 0x42, 0x0d, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x65, 0x74, 0x73, 0x75, 0x73,
	0x2e, 0x6e, 0x65, 0x74, 0x2f, 0x65, 0x62, 0x6f, 0x78, 0x2f, 0x65, 0x62, 0x6f, 0x78, 0x2d, 0x67,
	0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x62, 0x6f, 0x78, 0x70, 0x62,
	0xf8, 0x01, 0x01, 0xa2, 0x02, 0x05, 0x45, 0x50, 0x42, 0x6f, 0x78, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_box_timeline_proto_rawDescOnce sync.Once
	file_box_timeline_proto_rawDescData = file_box_timeline_proto_rawDesc
)

func file_box_timeline_proto_rawDescGZIP() []byte {
	file_box_timeline_proto_rawDescOnce.Do(func() {
		file_box_timeline_proto_rawDescData = protoimpl.X.CompressGZIP(file_box_timeline_proto_rawDescData)
	})
	return file_box_timeline_proto_rawDescData
}

var file_box_timeline_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_box_timeline_proto_goTypes = []interface{}{
	(*TimelineRequest)(nil),         // 0: etsme.ebox.TimelineRequest
	(*TimelineItemAttachment)(nil),  // 1: etsme.ebox.TimelineItemAttachment
	(*TimelineItem)(nil),            // 2: etsme.ebox.TimelineItem
	(*TimelineResponse)(nil),        // 3: etsme.ebox.TimelineResponse
	(FileCategory)(0),               // 4: etsme.ebox.file.FileCategory
	(InstantMessage_MessageType)(0), // 5: etsme.ebox.InstantMessage.MessageType
}
var file_box_timeline_proto_depIdxs = []int32{
	4, // 0: etsme.ebox.TimelineItemAttachment.category:type_name -> etsme.ebox.file.FileCategory
	5, // 1: etsme.ebox.TimelineItem.category:type_name -> etsme.ebox.InstantMessage.MessageType
	1, // 2: etsme.ebox.TimelineItem.attachment:type_name -> etsme.ebox.TimelineItemAttachment
	2, // 3: etsme.ebox.TimelineResponse.item:type_name -> etsme.ebox.TimelineItem
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_box_timeline_proto_init() }
func file_box_timeline_proto_init() {
	if File_box_timeline_proto != nil {
		return
	}
	file_box_im_proto_init()
	file_box_file_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_box_timeline_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimelineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_timeline_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimelineItemAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_timeline_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimelineItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_box_timeline_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimelineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_box_timeline_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_box_timeline_proto_goTypes,
		DependencyIndexes: file_box_timeline_proto_depIdxs,
		MessageInfos:      file_box_timeline_proto_msgTypes,
	}.Build()
	File_box_timeline_proto = out.File
	file_box_timeline_proto_rawDesc = nil
	file_box_timeline_proto_goTypes = nil
	file_box_timeline_proto_depIdxs = nil
}
